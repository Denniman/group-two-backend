// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum TransactionStatus {
  PENDING
  SUCCESSFUL
  CANCELLED
}

model User {
  id        String    @id @unique @default(cuid())
  firstName String
  lastName  String
  email     String    @unique
  password  String
  avatar    String?
  isAdmin   Boolean   @default(false)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  products  Product[]
  brandId   String?
  belongsTo Brand?    @relation(fields: [brandId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@unique([id, brandId])
}

model Product {
  id           String          @id @unique @default(cuid())
  name         String
  quantity     Int
  batchNumber  String
  dateSold     DateTime?
  amount       Float
  productImage String?
  description  String?
  category     ProductCategory @relation(fields: [categoryId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  categoryId   String
  user         User            @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId       String
  Transaction  Transaction?
  createdAt    DateTime        @default(now())
  updatedAt    DateTime        @updatedAt
}

model ProductCategory {
  id        String    @id @unique @default(cuid())
  name      String
  products  Product[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Transaction {
  id        String             @id @unique @default(cuid())
  date      DateTime
  quantity  Int
  txId      String?
  productId String
  status    TransactionStatus?
  amount    Int
  product   Product            @relation(fields: [id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  createdAt DateTime           @default(now())
  updatedAt DateTime           @updatedAt
}

model Brand {
  id                  String   @id @unique @default(cuid())
  businessName        String?
  businessLogo        String?
  primaryColor        String?
  businessEmail       String?
  secondaryColor      String?
  businessDescription String?  @db.VarChar(2555)
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
  customers           User[]
}
